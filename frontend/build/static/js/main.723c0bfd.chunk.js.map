{"version":3,"sources":["requests.js","components/overlays/buttons.js","components/overlays/overlays.js","components/overlays/settings.js","components/assets/settings.svg","components/defaults/topHeader.js","components/defaults/middleMain.js","components/defaults/bottomFooter.js","App.js","index.js"],"names":["HOSTNAME_WITHOUT_PORT","window","location","href","slice","BACKEND_LINK","getStatus","a","fetch","response","json","responseObject","online","password","method","headers","body","JSON","stringify","success","getPumpsAndStatus","status","Error","error","console","getPossibleDrinks","drinks","pumpNumber","newSelection","pump","addIngredient","ingredient","category","removeIngredient","createDrink","drinkObject","drinkJSON","responseJSON","getPossibleUnits","forInMs","id","time","getAllDrinks","allDrinks","allDrinksJSON","makeDrink","deleteDrink","getIngredients","ingredients","ingredientsJSON","DangerButton","props","text","children","cb","onClick","className","NormalButton","AttentionButton","onMouseDown","onMouseUp","onMouseLeave","RemoveButton","CloseButton","cbWhenPressed","BlurBackground","WhiteContentOverlay","content","closecb","cbToClose","useState","opacity","setOpacity","handleClose","setTimeout","useEffect","document","addEventListener","e","code","removeEventListener","style","getPasswordCookie","localStorage","getItem","Password","setPassword","redBorder","setRedBorder","cbWhenPasswordCorrect","cbWhenCorrect","checkInput","checkPassword","then","res","correct","setItem","setPasswordCookie","timeoutID","clearTimeout","eventHandler","value","onChange","event","newInput","currentTarget","type","IngredientsSelector","startDrink","selectedDrink","setSelectedDrink","setIngredients","useAvaibleIngredients","target","log","Object","entries","map","options","key","label","option","index","disabled","IngredientsCategorySelector","selectedCategory","currentCategory","setCurrentCategory","categories","setCategories","getCategories","PumpSetting","formattedName","setPumpSelectionStatus","PumpSettings","pumps","setPumps","getPumps","allPumps","pumpObj","select","undefined","AddIngredient","setSelectedCategory","ingredientsName","setIngredientsName","locked","setLocked","preventDefault","onSubmit","required","RemoveDrink","setDrinks","loading","setLoading","getDrinks","newDrinkID","drink","name","RemoveIngredient","selectedIngredient","setSelectedIngredient","selectedIndex","parentElement","Debug","setStatus","getString","object","refresh","intervalID","setInterval","clearInterval","SettingsHidden","showRemoveDrink","setShowRemoveDrink","showRemoveIngredient","setShowRemoveIngredient","showAddIngredient","setShowAddIngredient","showDebug","setShowDebug","SettingsMenu","accessGranted","setAccessGranted","ConnectionStatus","isConnected","connected","TaskStatus","task","currentTask","SettingsIcon","src","settingsIcon","alt","Header","connectionStatus","onlineStatus","setOnlineStatus","checkStatus","newStatus","useOnlineStatus","isOnline","currentlyDoing","cbShowSettings","FinalDrinkOverview","ingredientsArray","downloadIngredients","amountOfIngredient","unitOfMeasurement","DrinkCategory","showDrinkOverview","setShowDrinkOverview","showDrinkOverviewFor","AllDrinkCategories","nonAlcoholicDrinks","setNonAlcoholicDrinks","alcoholicDrinks","setAlcoholicDrinks","alcohol","noAlcohol","forEach","hasAlcohol","push","Main","UnitSelector","units","setUnits","selectedUnit","setSelectedUnit","getUnits","unit","AmountInput","setValue","newValue","max","min","IngredientSection","onDelete","onIngredientChange","onAmountChange","onUnitOfMeasurementChange","newIngredient","newAmount","newUnit","AddDrinkComponent","setName","blockInput","setBlockInput","validateInput","length","every","amount","newDrink","alert","newName","filter","setIngredient","setAmount","setUnit","Math","floor","Date","now","random","CustomComponent","pumpInterval","setPumpInterval","pumpState","setPumpState","startInterval","idOfPump","startPump","prevState","newState","cancelTimeout","getPumpState","Footer","showAddDrink","setShowAddDrink","showCustom","setShowCustom","App","showSettings","setShowSettings","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.723c0bfd.chunk.js","sourcesContent":["const HOSTNAME = window.location.href;\nconst HOSTNAME_WITHOUT_PORT = HOSTNAME.slice(0, -6);\nconst BACKEND_PORT = 4000;\nconst BACKEND_LINK = `${HOSTNAME_WITHOUT_PORT}:${BACKEND_PORT}/`;\n\nasync function getStatus() {\n    try {\n        const response = await fetch(BACKEND_LINK + 'status');\n        const json = await response.json();\n        const responseObject = {\n            online: true,\n            ...json\n        }\n        return responseObject;\n    } catch (e) {\n        return { online: false };\n    }\n}\n\nasync function checkPassword(password) {\n    try {\n        const response = await fetch(BACKEND_LINK + 'password', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ password }),\n        });\n        const json = await response.json();\n\n        return json;\n    } catch (e) {\n        return { success: false };\n    }\n}\n\nasync function getPumpsAndStatus() {\n    try {\n        const response = await fetch(BACKEND_LINK + 'pumps');\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw new Error(json.error);\n        }\n        return {\n            json,\n            success: true\n        }\n    } catch (e) {\n        console.error(e);\n        return { \n            error: e,\n            success: false \n        };\n    }\n}\n\nasync function getPossibleDrinks() {\n    try {\n        const response = await fetch(BACKEND_LINK + 'drink/ingredients');\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw new Error(json.error);\n        }\n        return {\n            drinks: json,\n            success: true\n        }\n    } catch (e) {\n        console.error(e);\n        return { \n            error: e,\n            success: false \n        };\n    }\n}\n\nasync function setPumpSelectionStatus(password, pumpNumber, newSelection) {\n    try {\n        const response = await fetch(BACKEND_LINK + 'setPump', {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ password, pump: pumpNumber, newSelection }),\n        });\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw new Error(json.error);\n        }\n        return {\n            success: true\n        }\n    } catch (e) {\n        console.error(e);\n        return { \n            error: e,\n            success: false \n        };\n    }\n}\n\nasync function addIngredient(password, ingredient, category) {\n    try {\n        const response = await fetch(BACKEND_LINK + 'drink/addIngredient', {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'  \n            },\n            body: JSON.stringify({ password, ingredient, category }),\n        });\n        const json = await response.json();\n        return json;\n    } catch (e) {\n        console.error(e);\n        return { \n            error: e,\n            success: false \n        };\n    }\n}\n\nasync function removeIngredient(password, ingredient, category) {\n    try {\n        const response = await fetch(BACKEND_LINK + 'drink/removeIngredient', {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ password, ingredient, category }),\n        });\n        const json = await response.json();\n        return json;\n    } catch (e) {\n        console.error(e);\n        return {\n            error: e,\n            success: false\n        }\n    }\n}\n\nasync function createDrink(drinkObject) {\n    const drinkJSON = JSON.stringify(drinkObject);\n\n    try {\n        const response = await fetch(BACKEND_LINK + 'drink/add', {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: drinkJSON,\n        });\n        \n        const responseJSON = await response.json();\n        return responseJSON;\n    } catch(e) {\n        return {\n            error: e,\n            success: false\n        }\n    }\n\n\n}\n\nasync function getPossibleUnits() {\n    return [\n        'ml',\n        'cl',\n        'tsp',\n        'tbsp',\n    ]\n}\n\nasync function getUnitInMl(unit) {\n    switch (unit) {\n        case 'ml':\n            return 1;\n        case 'cl':\n            return 10;\n        case 'tsp':\n            return 5;\n        case 'tbsp':\n            return 15;\n        default:\n            return 1;\n    }\n}\n\nasync function startPump(pumpNumber, forInMs) {\n    fetch(BACKEND_LINK + 'startPump', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ id: pumpNumber, time: forInMs }),\n    });\n}\n\nasync function getAllDrinks() {\n    try {\n        const allDrinks = await fetch(BACKEND_LINK + 'drink/all', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        });\n        const allDrinksJSON = await allDrinks.json();\n        return {\n            success: true,\n            response: allDrinksJSON\n        }\n    } catch(e) {\n        return {\n            success: false,\n        }\n    }\n}\n\nasync function makeDrink(id) {\n    fetch(BACKEND_LINK + 'drink/make', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({id}),\n    });\n\n    return true;\n}\n\nasync function deleteDrink(password, id) {\n    try {\n        const response = await fetch(BACKEND_LINK + 'drink/remove', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                password,\n                id\n            }),\n        });\n\n        return {\n            success: true,\n            response\n        }\n    } catch(e) {\n        return {\n            success: false,\n            error: e\n        }\n    }\n}\n\nasync function getIngredients(id) {\n    try {\n        const ingredients = await fetch(BACKEND_LINK + 'drink/ingredients', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({id}),\n        });\n        const ingredientsJSON = await ingredients.json();\n        return {\n            success: true,\n            response: ingredientsJSON\n        }\n    } catch(e) {\n        return {\n            success: false,\n            error: e\n        }\n    }\n}\n\nexport { getStatus, checkPassword, getPumpsAndStatus, getPossibleDrinks, setPumpSelectionStatus, addIngredient, removeIngredient,\n        getAllDrinks, getPossibleUnits, createDrink, startPump, makeDrink, deleteDrink, getIngredients }; ","import '../styles/buttons.css';\n\nfunction DangerButton(props) {\n    const text = props.children;\n    const cb = props.onClick;\n\n    return (\n        <div className=\"button red\" onClick={cb}>\n            {text}\n        </div>\n    )\n}\n\nfunction NormalButton(props) {\n    const text = props.children;\n    const cb = props.onClick;\n\n    return (\n        <div className=\"button green\" onClick={cb}>\n            {text}\n        </div>\n    )\n}\n\nfunction AttentionButton(props) {\n    const text = props.children;\n    const cb = props.onClick;\n    const onMouseDown = props.onMouseDown;\n    const onMouseUp = props.onMouseUp;\n    const onMouseLeave = props.onMouseLeave;\n\n    return (\n        <div className=\"button attention\" onClick={cb} onMouseDown={onMouseDown} onMouseUp={onMouseUp} onMouseLeave={onMouseLeave}>\n            {text}\n        </div>\n    )\n}\n\nfunction RemoveButton(props) {\n    const text = props.children;\n    const cb = props.onClick;\n\n    return (\n        <button onClick={cb} className=\"remove\">\n            {text}\n        </button>\n    )\n}\n\nfunction AddButton(props) {\n    return (\n        <button class=\"icon-btn add-btn\">\n            <div class=\"add-icon\"></div>\n            <div class=\"btn-txt\">Remove</div>\n        </button>\n    )\n}\nexport { DangerButton, NormalButton, AttentionButton, RemoveButton, AddButton };","import { useState, useEffect } from 'react';\nimport './../styles/overlays.css';\n\nfunction CloseButton(props) {\n    const cbWhenPressed = props.cbWhenPressed;\n\n    return (\n        <button className=\"close-button\" onClick={cbWhenPressed}>\n        </button>\n    )\n}\n\nfunction BlurBackground() {\n    // add pointer events on mount and unmount?\n\n    return (\n        <div className=\"blur-background\">\n        </div>\n    )\n}\n\nfunction WhiteContentOverlay(props) {\n    const content = props.children;\n    const closecb = props.cbToClose;\n    const [opacity, setOpacity] = useState(0);\n\n    useEffect(() => {\n        setTimeout(\n            () => {\n                setOpacity(1);\n            }, 50\n        )\n    }, [])\n\n    useEffect(() => {\n        document.addEventListener('keydown', (e) => {\n            if (e.code === 'Escape') handleClose();\n        });\n    \n        return () => {\n            document.removeEventListener('keydown', (e) => {\n                if (e.code === 'Escape') handleClose();\n            });\n        }\n    }, [])\n\n    function handleClose() {\n        setOpacity(0);\n        setTimeout(closecb, 200);\n    }\n\n    return (\n        <div className='white-content-overlay' style={{\n            opacity: opacity\n        }}>\n            <BlurBackground />\n            <div className=\"settings-container\">\n                {content}\n                <CloseButton cbWhenPressed={handleClose}/>\n            </div>\n        </div>\n    );\n}\n\nexport { WhiteContentOverlay };","import React, { useState, useEffect } from \"react\";\nimport { getStatus, checkPassword, getPumpsAndStatus, getPossibleDrinks, setPumpSelectionStatus, addIngredient, removeIngredient, getAllDrinks, deleteDrink } from \"../../requests\";\nimport { NormalButton, DangerButton } from \"./buttons\";\nimport { WhiteContentOverlay } from \"./overlays\";\nimport './../styles/settings.css';\n\nfunction setPasswordCookie(password) {\n    localStorage.setItem('password', password);\n}\n\nfunction getPasswordCookie() {\n    return localStorage.getItem('password');\n}\n\nfunction Password(props) {\n    const [password, setPassword] = useState('');\n    const [redBorder, setRedBorder] = useState(false);\n    const cbWhenPasswordCorrect = props.cbWhenCorrect;\n\n    function checkInput() {\n        /* all on the requests on the shown site after correct password\n        must be sent with the correct password */\n        if (password === '') setRedBorder(true);\n        checkPassword(password).then(res => {\n            if (res.correct) {\n                cbWhenPasswordCorrect();\n                setPasswordCookie(password);\n            } else {\n                setRedBorder(true);\n            }\n        });\n    }\n\n    useEffect(() => {\n        const timeoutID = setTimeout(() => setRedBorder(false), 500);\n        return () => clearTimeout(timeoutID);\n    }, [redBorder]);\n\n    useEffect(() => {\n        const eventHandler = (e) => {\n            if (e.code === 'Enter') {\n                checkInput();\n            }\n        }\n\n        document.addEventListener('keydown', eventHandler);\n        return () => document.removeEventListener('keydown', eventHandler);\n    });\n\n    function handleChange(event) {\n        const newInput = event.currentTarget.value;\n        setPassword(newInput);\n    }\n\n    return (\n        <div className={`password-input ${redBorder ? 'invalid' : ''}`}>\n            <input value={password} onChange={handleChange} type=\"password\" />\n            <button className=\"submit\" onClick={checkInput}>Submit</button>\n        </div>\n    )\n\n}\n\nfunction useAvaibleIngredients() {\n    const [ingredients, setIngredients] = useState();\n\n    useEffect(() => {\n        async function getIngredients() {\n            const response = await getPossibleDrinks();\n            setIngredients(response.drinks);\n        }\n\n        getIngredients();\n    }, []);\n\n    return ingredients;\n}\n\nfunction IngredientsSelector(props) {\n    const onChange = props.onChange;\n    const startDrink = props.selectedDrink;\n    const [selectedDrink, setSelectedDrink] = useState();\n\n    const ingredients = useAvaibleIngredients();\n\n    useEffect(() => {\n        if (!startDrink)\n            setSelectedDrink('empty')\n        else\n            setSelectedDrink(startDrink);\n    }, [startDrink]);\n\n    function handleChange(event) {\n        const newInput = event.target.value;\n        setSelectedDrink(newInput);\n        try {\n            onChange(event);\n        } catch (e) {\n            console.log('Did you define an onChange prop? ' + e);\n        }\n    }\n\n    function renderOptions(options) {\n        return options.map((option, index) => <option key={index} value={option}>{option}</option>);\n    }\n\n    if (ingredients && selectedDrink)\n        return (\n            <select value={selectedDrink} onChange={handleChange}>\n                <option key=\"empty\" value=\"empty\">Empty</option>\n                {Object.entries(ingredients).map(([key, value]) => {\n                    return (<optgroup key={key} label={key}>\n                        {renderOptions(value)}\n                    </optgroup>)\n                })}\n            </select>\n        )\n    else\n        return (\n            <select disabled>\n                <option value=\"loading\">Loading...</option>\n            </select>\n        )\n}\n\nfunction IngredientsCategorySelector(props) {\n    const onChange = props.onChange;\n    const selectedCategory = props.selectedCategory;\n\n    const [currentCategory, setCurrentCategory] = useState();\n    const [categories, setCategories] = useState();\n\n    async function getCategories() {\n        const response = await getPossibleDrinks();\n\n        const categories = Object.entries(response.drinks).map(([key, value]) => {\n            return key;\n        });\n\n        setCategories(categories);\n    }\n\n    useEffect(() => {\n        getCategories();\n\n        if (selectedCategory) setCurrentCategory(selectedCategory);\n    }, [selectedCategory]);\n\n    function handleChange(event) {\n        const newInput = event.target.value;\n        setCurrentCategory(newInput);\n        try {\n            onChange(newInput);\n        } catch (e) {\n            console.log('Did you define an onChange prop? ' + e);\n        }\n    }\n\n    return (\n        <select className=\"ingredients-category-selector\" value={currentCategory} onChange={handleChange}>\n            <option value=''>Select category</option>\n            {categories ? categories.map((category) => <option key={category} value={category}>{category}</option>) : <option>Loading...</option>}\n        </select>\n    )\n}\n\nfunction PumpSetting(props) {\n    const pumpNumber = props.pumpNumber;\n    const formattedName = 'pump' + pumpNumber;\n\n    function setSelection(event) {\n        const newInput = event.target.value;\n        const currentPassword = getPasswordCookie();\n        setPumpSelectionStatus(currentPassword, pumpNumber, newInput);\n    }\n\n    return (\n        <div className=\"pump-setting\">\n            <div>{formattedName}</div>\n            <IngredientsSelector onChange={setSelection} selectedDrink={props.selectedDrink} />\n        </div>\n        );\n}\n\nfunction PumpSettings() {\n    const [pumps, setPumps] = useState();\n\n    async function getPumps() {\n        const response = await getPumpsAndStatus();\n        const allPumps = response.json.pumps;\n        setPumps(allPumps);\n    }\n\n    function refresh() {\n        setPumps(undefined);\n        getPumps();\n    }\n\n    useEffect(() => {\n        getPumps();\n    }, []);\n\n    return (\n        <div className=\"pump-settings\">\n            <div className=\"pumps\">\n                {pumps ? (\n                    pumps.map((pumpObj, index) => {\n                        return (\n                        <PumpSetting key={index} pumpNumber={pumpObj.id} selectedDrink={pumpObj.select} />\n                        )\n                    })\n                ) : <div>Loading...</div>}\n            </div>\n            <NormalButton onClick={refresh}>Refresh</NormalButton>\n        </div>\n    )\n}\n\nfunction AddIngredient(props) {\n    const [selectedCategory, setSelectedCategory] = useState();\n    const [ingredientsName, setIngredientsName] = useState();\n    const [locked, setLocked] = useState(false);\n\n    const closecb = props.closecb;\n\n    async function onSubmit(event) {\n        event.preventDefault();\n        if (!(ingredientsName && selectedCategory)) return;\n        setLocked(true);\n        const password = getPasswordCookie();\n        const addedIngredient = await addIngredient(password, ingredientsName, selectedCategory);\n        if (addedIngredient) setIngredientsName();\n        setLocked(false);\n        closecb();\n    }\n\n    function handleChange(event) {\n        const newInput = event.currentTarget.value;\n        setIngredientsName(newInput);\n    }\n\n    if (locked) {\n        return <div>Adding...</div>\n    } else {\n        return (\n            <div className=\"add-ingredient\">\n                <div className=\"add-ingredient-title\">Add Ingredient</div>\n                <form className=\"add-ingredient-input\" onSubmit={onSubmit}>\n                    <input type=\"text\" onChange={handleChange} required/>\n                    <IngredientsCategorySelector onChange={setSelectedCategory} selectedCategory={selectedCategory}/>\n                    <input type=\"submit\" value=\"Add\" required/>\n                </form>\n                <DangerButton onClick={closecb}>Cancel</DangerButton>\n            </div>\n        )\n    }\n}\n\nfunction RemoveDrink(props) {\n    const [drinks, setDrinks] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [selectedDrink, setSelectedDrink] = useState();\n    const closecb = props.closecb;\n\n    useEffect(()=> {\n        async function getDrinks() {\n            const response = await getAllDrinks();\n            const allDrinks = response.response;\n            setDrinks(allDrinks);\n        }\n\n        getDrinks();\n    }, []);\n\n    function handleChange(e) {\n        const newDrinkID = e.target.value;\n        if (!newDrinkID) return;\n        setSelectedDrink(newDrinkID);\n    }\n\n    async function deleteSelected() {\n        if (!selectedDrink) return;\n\n        setLoading(true);\n        const password = getPasswordCookie();\n        const response = await deleteDrink(password, selectedDrink);\n        setSelectedDrink()\n        setLoading(false);\n        if (response.success) closecb();\n    }\n\n    if (!drinks || loading) {\n        return <div>Loading...</div>\n    }\n\n    return (\n        <div className=\"remove-drink-section\">\n            <select value={selectedDrink} onChange={handleChange}>\n                <option value=\"\">Select Drink</option>\n                {\n                    drinks.map((drink, index) => {\n                        return <option key={index} value={drink.id}>{drink.name}</option>\n                    })\n                }\n            </select>\n            <DangerButton onClick={deleteSelected}>Delete</DangerButton>\n            <DangerButton>Close</DangerButton>\n        </div>\n    );\n}\n\nfunction RemoveIngredient(props) {\n    const [locked, setLocked] = useState(false);\n    const [selectedCategory, setSelectedCategory] = useState();\n    const [selectedIngredient, setSelectedIngredient] = useState();\n    const closecb = props.closecb;\n\n    async function onSubmit()  {\n        if (!selectedIngredient || (selectedIngredient === 'empty')) return;\n        setLocked(true);\n        const password = getPasswordCookie();\n        await removeIngredient(password, selectedIngredient, selectedCategory);\n        closecb();\n        setLocked(false);\n    }\n\n    function handleChange(event) {\n        const newInput = event.target.value;\n        setSelectedIngredient(newInput);\n        const selectedIndex = event.currentTarget.selectedIndex;\n        const selectedOptionElement = event.currentTarget[selectedIndex];\n        const selectedOptgroup = selectedOptionElement.parentElement;\n        const category = selectedOptgroup.label;\n        setSelectedCategory(category);\n    }\n    \n    return locked ? <div>Deleting...</div> : \n    <div className=\"ingredient delete\">\n        <IngredientsSelector onChange={handleChange}/>\n        <DangerButton onClick={onSubmit}>Remove Ingredient</DangerButton>\n        <DangerButton onClick={closecb}>Cancel</DangerButton>\n    </div>;\n}\n\nfunction Debug() {\n    const [status, setStatus] = useState();\n    const [pumps, setPumps] = useState();\n    const [drinks, setDrinks] = useState();\n\n    function getString(object) {\n        return JSON.stringify(object, null, 2);\n    }\n\n    async function refresh() {\n        const status = await getStatus();\n        setStatus(getString(status));\n        const pumps = await getPumpsAndStatus();\n        setPumps(getString(pumps));\n        const drinks = await getPossibleDrinks();\n        setDrinks(getString(drinks));\n    }\n\n    useEffect(() => {\n        refresh();\n        const intervalID = setInterval(refresh, 1000);\n\n        return () => clearInterval(intervalID);\n    });\n\n    return (\n        <div className=\"debug-values\">\n            <div className=\"debug-container\">\n                <div className=\"debug-title\">Status</div>\n                <pre className=\"debug-value\">{status}</pre>\n            </div>\n            <div className=\"debug-container\">\n                <div className=\"debug-title\">Pumps</div>\n                <pre className=\"debug-value\">{pumps}</pre>\n            </div>\n            <div className=\"debug-container\">\n                <div className=\"debug-title\">Drinks</div>\n                <pre className=\"debug-value\">{drinks}</pre>\n            </div>\n        </div>\n    );\n}\n\nfunction SettingsHidden() {\n    const [showRemoveDrink, setShowRemoveDrink] = useState(false);\n    const [showRemoveIngredient, setShowRemoveIngredient] = useState(false);\n    const [showAddIngredient, setShowAddIngredient] = useState(false);\n    const [showDebug, setShowDebug] = useState(false);\n\n    return (\n        <div className=\"settings-hidden\">\n            <PumpSettings />\n            {showRemoveDrink ? <RemoveDrink closecb={() => setShowRemoveDrink(false)}/> : <DangerButton onClick={() => setShowRemoveDrink(true)}>Remove Drink</DangerButton>}\n            {showRemoveIngredient ? <RemoveIngredient closecb={() => setShowRemoveIngredient(false)}/> : <DangerButton onClick={() => setShowRemoveIngredient(true)}>Remove Ingredient</DangerButton>}\n            {showAddIngredient ? <AddIngredient closecb={() => setShowAddIngredient(false)}/> : <NormalButton onClick={() => setShowAddIngredient(true)}>Add Ingredient</NormalButton>}\n            {showDebug ? <Debug /> : <NormalButton onClick={() => setShowDebug(true)}>Debug</NormalButton>}\n        </div>\n    );\n}\n\nfunction SettingsMenu(props) {\n    const [accessGranted, setAccessGranted] = useState(false);\n    const cbToClose = props.cbToClose;\n\n    function grantAccess() {\n        setAccessGranted(true);\n    }\n\n    return (\n        <WhiteContentOverlay cbToClose={cbToClose}>\n            {accessGranted ? <SettingsHidden /> : <Password cbWhenCorrect={grantAccess}/>}\n        </WhiteContentOverlay>\n    );\n}\n\nexport default SettingsMenu;\nexport { IngredientsSelector, IngredientsCategorySelector };","export default __webpack_public_path__ + \"static/media/settings.8588567d.svg\";","import React, { useState, useEffect } from 'react';\nimport settingsIcon from './../assets/settings.svg';\nimport '../styles/topHeader.css';\n\nimport { getStatus } from './../../requests';\n\nfunction useOnlineStatus() {\n    const [onlineStatus, setOnlineStatus] = useState({\n        online: false,\n        task: 'Idle'\n    });\n\n    async function checkStatus() {\n        const newStatus = await getStatus();\n        setOnlineStatus(newStatus);\n    }\n\n    useEffect(() => {\n        checkStatus();\n        const intervalID = setInterval(checkStatus, 2000);\n        return () => clearInterval(intervalID);\n    }, []);\n\n    return onlineStatus;\n}\n\nfunction ConnectionStatus(props) {\n    const isConnected = props.connected;\n\n    return (\n        <div className=\"status\">\n            <div className={`circle ${isConnected ? 'green' : 'red'}`}>\n            </div>\n\n            <div className=\"text\">\n                {isConnected ? 'Connected' : 'Disconnected'}\n            </div>\n        </div>\n    )\n}\n\nfunction TaskStatus(props) {\n    const task = props.currentTask;\n\n    return (\n        <div className=\"task\">\n            <div className=\"current\">Current Status:</div>\n            <div className=\"task\">{task}</div>\n        </div>\n    )\n}\n\nfunction SettingsIcon(props) {\n    const cbWhenPressed = props.cbWhenPressed;\n\n    return (\n        <div onClick={cbWhenPressed} className=\"settings\">\n            <img src={settingsIcon} alt=\"Settings\"></img>\n        </div>\n    )\n}\n\nfunction Header(props) {\n    const connectionStatus = useOnlineStatus();\n    const isOnline = connectionStatus.online;\n    const currentlyDoing = connectionStatus.task;\n\n    const cbShowSettings = props.cbShowSettings;\n    return (\n        <div className=\"top-header\">\n            <ConnectionStatus connected={isOnline}/>\n            <TaskStatus currentTask={currentlyDoing}/>\n            <SettingsIcon cbWhenPressed={cbShowSettings}/>\n        </div>\n    )\n}\n\nexport default Header;","import '../styles/middleMain.css';\nimport { AttentionButton } from './../../components/overlays/buttons';\nimport { getAllDrinks, makeDrink, getIngredients } from './../../requests';\nimport { useState, useEffect } from 'react'; \nimport { WhiteContentOverlay } from '../../components/overlays/overlays';\n\nfunction FinalDrinkOverview(props) {\n    const closecb = props.closecb;\n    const drink = props.drink;\n    const [ingredients, setIngredients] = useState();\n\n    useEffect(() => {\n        async function downloadIngredients() {\n            const ingredients = await getIngredients(drink.id);\n            const ingredientsArray = ingredients.response.ingredients;\n            setIngredients(ingredientsArray);\n        }\n\n        downloadIngredients();\n    }, [drink]);\n\n    async function pumpDrink() {\n        await makeDrink(drink.id);\n        closecb();\n    }\n\n    return (\n        <WhiteContentOverlay cbToClose={closecb}>\n            <h2 className=\"title\">{drink.name}</h2>\n            <div className='ingredients'>\n                    <ul>\n                        {ingredients ? \n                        ingredients.map((ingredient, index) => {\n                            return <li key={index}>{`${ingredient.amountOfIngredient} ${ingredient.unitOfMeasurement} ${ingredient.ingredient}`}</li>\n                        })\n                        : null}\n                    </ul>\n            </div>\n            <AttentionButton onClick={pumpDrink}>Make Drink</AttentionButton>\n        </WhiteContentOverlay>\n    )\n}\n\nfunction DrinkCategory(props) {\n    const category = props.category;\n    const drinks = props.drinks;\n\n    const [showDrinkOverview, setShowDrinkOverview] = useState(false);\n    const [selectedDrink, setSelectedDrink] = useState();\n\n    async function showDrinkOverviewFor(drink) {\n        setShowDrinkOverview(true);\n        setSelectedDrink(drink);\n    }\n\n    return (\n        <div className=\"drink-category\">\n            {showDrinkOverview ? \n                <FinalDrinkOverview closecb={() => setShowDrinkOverview(false)} drink={selectedDrink}>\n                </FinalDrinkOverview>\n                : null}\n            <div className=\"name\">{category}</div>\n            <div className=\"drinks\">\n                {drinks.map((drink, index) => {\n                    return <AttentionButton\n                        key={index}\n                        onClick={\n                            () => showDrinkOverviewFor(drink)\n                        }\n                    >{drink.name}</AttentionButton>\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nfunction AllDrinkCategories(props) {\n    const [nonAlcoholicDrinks, setNonAlcoholicDrinks] = useState();\n    const [alcoholicDrinks, setAlcoholicDrinks] = useState();\n\n    useEffect(() => {\n        async function getCategories() {\n            const response = await getAllDrinks();\n            const allDrinks = response.response;\n\n            const alcohol = [];\n            const noAlcohol = [];\n\n            allDrinks.forEach((drink) => {\n                if (drink.hasAlcohol === 1) {\n                    alcohol.push(drink);\n                } else {\n                    noAlcohol.push(drink);\n                }\n            });\n\n            setAlcoholicDrinks(alcohol);\n            setNonAlcoholicDrinks(noAlcohol);\n        }\n\n        getCategories();\n    }, [])\n\n    if (alcoholicDrinks && nonAlcoholicDrinks) {\n        return (\n            <div className=\"drink-categories\">\n                <DrinkCategory category=\"Alcoholic\" drinks={alcoholicDrinks}/>\n                <DrinkCategory category=\"Non-alcoholic\" drinks={nonAlcoholicDrinks}/>\n            </div>\n        );\n    }\n    \n    return <div className=\"loading\">Loading...</div>\n}\n\nfunction Main() {\n    return (\n        <div className=\"main\">\n            <AllDrinkCategories />\n        </div>\n    )\n}\n\nexport default Main;","import '../styles/bottomFooter.css';\nimport { useState, useEffect } from 'react';\nimport { AttentionButton, RemoveButton } from '../../components/overlays/buttons';\nimport { WhiteContentOverlay } from '../../components/overlays/overlays';\nimport { getPumpsAndStatus, getPossibleUnits, createDrink, startPump } from '../../requests';\nimport { IngredientsSelector } from './../../components/overlays/settings';\n\nfunction UnitSelector(props) {\n    const onChange = props.onChange;\n    const [units, setUnits] = useState();\n    const [selectedUnit, setSelectedUnit] = useState();\n\n    useEffect(() => {\n        async function getUnits() {\n            const units = await getPossibleUnits();\n            setUnits(units);\n        }\n\n        getUnits();\n    }, []);\n\n    function handleChange(e) {\n        setSelectedUnit(e.target.value);\n        onChange(e);\n    }\n\n    return (\n        <select className=\"unit-selector\" onChange={handleChange} value={selectedUnit}>\n            {selectedUnit ? null :  <option value=\"\">Select Unit</option>}\n            {units ? units.map((unit) => {\n                return (\n                    <option key={unit} value={unit}>\n                        {unit}\n                    </option>\n                )\n            }) : null}\n        </select>\n    )\n}\n\nfunction AmountInput(props) {\n    const onChange = props.onChange;\n    const [value, setValue] = useState('');\n\n    function handleChange(e) {\n        const newValue = e.target.value;\n        if (newValue > 1000) return;\n        if (newValue < 0) return;\n        setValue(newValue);\n        onChange(e);\n    }\n\n    return (\n        <input className=\"amount-input\" type=\"number\" onChange={handleChange} max=\"1000\" min=\"1\" value={value} />\n    )\n}\n\nfunction IngredientSection(props) {\n    const onDelete = props.onDelete;\n    const onIngredientChange = props.onIngredientChange;\n    const onAmountChange = props.onAmountChange;\n    const onUnitOfMeasurementChange = props.onUnitOfMeasurementChange;\n\n    function handleChangeIngredient(e) {\n        const newIngredient = e.target.value;\n        onIngredientChange(newIngredient);\n    }\n\n    function handleChangeAmount(e) {\n        const newAmount = e.target.value;\n        onAmountChange(newAmount);\n    }\n\n    function handleChangeUnit(e) {\n        const newUnit = e.target.value;\n        onUnitOfMeasurementChange(newUnit);\n    }\n\n    return (\n        <div className=\"ingredient-section\">\n            <IngredientsSelector onChange={handleChangeIngredient}/>\n            <AmountInput onChange={handleChangeAmount} />\n            <UnitSelector onChange={handleChangeUnit}/>\n            <RemoveButton onClick={onDelete}/>\n        </div>\n    )\n}\n\nfunction AddDrinkComponent(props) {\n    const [name, setName] = useState();\n    const [ingredients, setIngredients] = useState([]);\n    const [blockInput, setBlockInput] = useState(false);\n\n    function getID() {\n        return Math.floor(+Date.now() + Math.random());\n    }\n\n    function addIngredient() {\n        setIngredients([...ingredients, {\n            id: getID(),\n            ingredient: '',\n            amount: '',\n            unit: ''\n        }]);\n    }\n\n    function removeIngredient(id) {\n        setIngredients(ingredients.filter((ingredient) => ingredient.id !== id));\n    }\n\n    function setIngredient(id, newIngredient) {\n        setIngredients(ingredients.map((ingredient) => {\n            if (ingredient.id === id) {\n                return {\n                    ...ingredient,\n                    ingredient: newIngredient\n                }\n            }\n\n            return ingredient;\n        }));\n    }\n\n    function setAmount(id, newAmount) {\n        setIngredients(ingredients.map((ingredient) => {\n            if (ingredient.id === id) {\n                return {\n                    ...ingredient,\n                    amount: newAmount\n                }\n            }\n\n            return ingredient;\n        }));\n    }\n\n    function setUnit(id, newUnit) {\n        setIngredients(ingredients.map((ingredient) => {\n            if (ingredient.id === id) {\n                return {\n                    ...ingredient,\n                    unit: newUnit\n                }\n            }\n\n            return ingredient;\n        }));\n    }\n\n    function handleNameChange(e) {\n        const newName = e.target.value;\n        setName(newName);\n    }\n\n    function validateInput() {\n        if (ingredients.length === 0) return false;\n\n        const everythingHasValues = ingredients.every((ingredient) => {\n            return (ingredient.id && ingredient.ingredient && ingredient.amount && ingredient.unit) != false;\n        });\n        const hasName = (name != false);\n\n        return everythingHasValues && hasName;\n    }\n\n    async function submit() {\n        const correctFormatting = validateInput();\n        if (correctFormatting) {\n            setBlockInput(true);\n            const newDrink = {\n                name,\n                ingredients\n            }\n\n            const response = await createDrink(newDrink);\n\n            if (response.success === true) {\n                setName('');\n                setIngredients([]);\n            }\n            setBlockInput(false);\n        } else {\n            alert('Please fill out all fields');\n        }\n    }\n\n    if (blockInput) return (\n        <div className=\"add-drink-component\">\n            Adding...\n        </div>\n    )\n\n    return (\n        <>\n            <div className=\"add-drink-component\">\n                <input className=\"name\" type=\"text\" value={name} onChange={handleNameChange}></input>\n\n                {ingredients.length ? ingredients.map((ingredient) => {\n                    return (\n                        <IngredientSection key={ingredient.id} \n                        onDelete={\n                            () => {\n                                const id = ingredient.id;\n                                removeIngredient(id);   \n                            }\n                        }\n                        onIngredientChange={\n                            (newIngredient) => setIngredient(ingredient.id, newIngredient)\n                        }\n                        onAmountChange={\n                            (newAmount) => setAmount(ingredient.id, newAmount)\n                        }\n                        onUnitOfMeasurementChange={\n                            (newUnit) => setUnit(ingredient.id, newUnit)\n                        }\n                    />\n                    )\n                }) : null}\n                <AttentionButton onClick={addIngredient}>Add Ingredient</AttentionButton>\n            </div>\n            <div className=\"submit-container\">\n                <AttentionButton onClick={submit}>Submit</AttentionButton>\n            </div>\n        </>\n    )\n}\n\nfunction CustomComponent(props) {\n    const [pumpInterval, setPumpInterval] = useState([\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n    ]);\n    const [pumpState, setPumpState] = useState();\n\n    useEffect(() => {\n        async function getPumpState() {\n            const response = await getPumpsAndStatus();\n            setPumpState(response.json.pumps);\n        }\n        getPumpState();\n    }, []);\n\n    function startInterval(idOfPump) {\n        const intervalID = setInterval(() => {\n            startPump(idOfPump, 500);\n        }, 500);\n\n        setPumpInterval((prevState) => {\n            const newState = [...prevState];\n            newState[idOfPump - 1] = intervalID;\n            return newState;\n        });\n    }\n\n    function cancelTimeout(idOfPump) {\n        clearInterval(pumpInterval[idOfPump - 1]);\n    }\n\n    return (\n        <div className=\"custom-buttons\">\n            {pumpState ?\n                pumpState.map((pump) => {\n                    const idOfPump = pump.id;\n                    const selectedIngredient = pump.select;\n\n                    return <AttentionButton key={idOfPump}\n                    \n                    onMouseDown={\n                        () => {\n                            startInterval(idOfPump);\n                        }\n                    }\n\n                    onMouseUp={\n                        () => {\n                            cancelTimeout(idOfPump);\n                        }\n                    }\n\n                    onMouseLeave={\n                        () => {\n                            cancelTimeout(idOfPump);\n                        }\n                    }\n                    >{selectedIngredient}</AttentionButton>\n                })\n                :\n                <div>Loading...</div>\n            }\n        </div>\n    )\n}\n\nfunction Footer() {\n    const [showAddDrink, setShowAddDrink] = useState(false);\n    const [showCustom, setShowCustom] = useState(false);\n\n    return (\n        <div className=\"footer\">\n            {showAddDrink ? <WhiteContentOverlay cbToClose={() => setShowAddDrink(false)}> \n                <AddDrinkComponent />\n            </WhiteContentOverlay> : null}\n\n            {showCustom ? <WhiteContentOverlay cbToClose={() => setShowCustom(false)}>\n                <CustomComponent />\n            </WhiteContentOverlay> : null}\n\n            <AttentionButton onClick={() => setShowAddDrink(true)}>Add Drink</AttentionButton>\n            <AttentionButton onClick={() => setShowCustom(true)}>Custom</AttentionButton>\n        </div>\n    )\n}\n\nexport default Footer;","import './App.css';\nimport SettingsMenu from './components/overlays/settings';\nimport Header from './components/defaults/topHeader';\nimport Main from './components/defaults/middleMain';\nimport Footer from './components/defaults/bottomFooter';\n\nimport React, {useState} from 'react';\n\nfunction App() {\n  const [showSettings, setShowSettings] = useState(false);\n\n  return (\n    <div className=\"App\">\n      {showSettings ? <SettingsMenu cbToClose={() => setShowSettings(false)}/> : null}\n      <Header cbShowSettings={() => setShowSettings(true)}/>\n      <Main/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}